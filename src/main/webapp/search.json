[
  
   {
     
        "title"    : "Análise",
        "url"      : "/sismob/An%C3%A1lise/index.html",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Desenvolvimento",
        "url"      : "/sismob/Desenvolvimento/index.html",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Configurar ID",
        "url"      : "/sismob/Testes/automatizado/como-setar-ids/index.html",
        "content"  : "Como colocar/configurar ID’s nos componentes de uma telaPor que configurar ID no componente?É uma boa prática para poder facilitar a captura de elementos/componentes na tela, com a configuração de id podemos resumir melhor nossa construção do código de PageObjects.1. Procurando o ComponenteNa tela do seu browser, você pode Inspecionar o elemento desejado que está sem id e pela sua herança, ir de pai em pai procurando uma id que contenha o texto como id=”…ViewImpl” no final de seu cadastro.Esse id provavelmente será a classe JAVA ou classe que invoca o componente que possui o id desejado,Caso seja uma label:Vai ter a conotação do tipoLabel ou VaadinLabelVeja exemplo:O que é necessário realizar é apenas referenciar o objeto, com a chamada do método setId(Nome do ID que vai ser configurado) conforme exemplo abaixo:Caso seja um TextField:P.S: Sendo assim, você capturar seu elemento usando o id, sem precisar ter que encontrar um xpath instável."
     
   } ,
  
   {
     
        "title"    : "Automatizado",
        "url"      : "/sismob/Testes/automatizado/index.html",
        "content"  : "Configurar ID"
     
   } ,
  
   {
     
        "title"    : "Testes",
        "url"      : "/sismob/Testes/index.html",
        "content"  : "Automatizado"
     
   } ,
  
   {
     
        "title"    : "Arquitetura",
        "url"      : "/sismob/arquitetura/index.html",
        "content"  : "Modelo de Projeto - MVP | PT_BRDefiniçõesNodos: Nodos são classes que representam folhas na árvore de navegação. Todos os nodos são instanciados durante a fase de boot da aplicação e nunca são liberados da memória. Uma instância de nodo pode possuir n filhos, mas somente um pai. É possível que na árvore de navegação exista mais de uma folha para o mesmo tipo de nodo, desde que seus pais sejam diferentes.Presenters: Apresentadores são classes que fazem o intermédio da camada de visão com a camada de modelo. Não devem possuir lógica de negócio e chamadas da visão para o apresentador nunca devem esperar por um retorno.Views: Views são classes que representam como a página é apresentada ao usuário do sistema. Não devem conter lógica de negócios e não podem fazer chamadas diretas para a camada de modelo.ViewParameters: ViewParameters são classes utilizadas para configurar como a visão deve ser apresentada. Sua criação é feita no apresentador utilizando um serviço, mas sua utilização é feita pela visão. Um ViewParameters só é criado quando seu respectivo apresentador é criado (initialize = true).Services: Serviços são classes responsáveis por aplicar as regras de negócio e, se necessário, fazer requisições ao banco de dados. Seus resultados sempre são retornados ao apresentador.Forms: Forms são DTOs utilizados pela visão para preencher os dados apresentados.Fluxo de navegação  1 - Usuário interage com um componente que irá levá-lo a outra página do sistema.  2 - O componente interagido avisa a visão sobre a interação do usuário.  3 - A visão repassa a requisição ao seu respectivo apresentador.  4 - O apresentador utiliza o nodo de origem para recuperar o nodo destino.  5 - O nodo destino é enviado ao CoreApplication para que ele inicie o processo de navegação através do método navigateTo. O primeiro passo é publicar na url todos os parâmetros utilizados pelo apresentador atual, isso é feito chamando o método publishParameters(CoreURL).  6 - A partir do nodo destino o CoreApplication instância o apresentador do nodo e faz a chamada do método applyParameters(CoreURL).  7 - Se necessário, o apresentador faz requisições ao serviço para validar regras ou recuperar registros do banco de dados.  8 - O serviço utiliza o EntityManager para criar uma conexão e executar uma transação na base de dados.  9 - O apresentador envia para a view o que ela precisa para se desenhar através do ViewParameters e logo em seguida envia para ela o form para preencher os componentes de acordo com os registros salvos no banco de dados.ApplyParameters  O método applyParameters(CoreURL, boolean) do presenter é chamado a partir do seu nodo, quando o presenter é uma nova instância.checkParentPresenters(CoreURL): Método utilizado para verificar se os presenters necessários para a execução do nodo corrente foram corretamente inicializados.createUrlBinder(CoreURL): Método vazio que pode ser sobrescrito para instanciar um objeto do tipo UrlBinder.readUrl(CoreURL): Método utilizado para ler os parâmetros publicados na url e, se necessário, salva-los em atributos para uso posterior.beforeInitialize(CoreURL, boolean): Método executado antes da inicialização do apresentador. Um apresentador só é inicializado somente quando uma nova instancia sua é criada, o que ocorre somente quando o nodo daquele apresentador é adicionado na árvore de navegação.initialize(CoreURL, boolean): Método abstrato utilizado para inicializar o apresentador. Instancia objetos que precisam estar prontos antes do refreshData. Os métodos getViewParameters e render normalmente são chamados durante a inicialização do apresentador.afterInitialize(CoreURL, boolean): Método  vazio que pode ser sobrescrito para instanciar objetos que precisam ser criados antes do refreshData e depois do initialize.validateInitialization: Verifica se os objetos necessários para o correto funcionamento do apresentador foram criados.refreshData(CoreURL): Verifica se a tela precisa ser atualizada e executa o método refresh, se necessário. Normalmente o método refresh é responsável por fazer a requisição ao serviço pedindo os dados salvos no banco de dados e repassando-os à visão, para que ela preencha os campos criados.bindParentView(CoreURL, boolean): Envia ao presenter pai a view corrente para ela ser desenhada na tela.keepGoing: Último método do applyParameters, responsável por fazer as últimas verificações e dizer se o fluxo de execução pode seguir adiante ou deve ser interrompido.PublishParameters  O método publishParameters(CoreURL) é chamadado a partir do nodo, que repassa a chamada para o CoreApplication.newURL(CoreApplication): Método chamado pelo nodo, que utiliza o CoreApplication passado como parâmetro para criar uma CoreURL e iterar sobre os apresentadores atachados.for presenter in presenters atachados: Para cada apresentador atachado no CoreApplication é verificado se esse apresentador faz parte da árvore de navegação destino, se sim, o método publishParameters(CoreURL) do apresentador é chamado para que ele publique seus parâmetros na nova url. Todos os parâmetros não publicados são perdidos.ExemplosExemplo do publishParameters ao clicar no botão de emitir parecer de uma solicitação na lista de propostas e obrasLinks úteis                "
     
   } ,
  
   {
     
        "title"    : "Consultas Importantes",
        "url"      : "/sismob/banco-de-dados/consultas-importantes/index.html",
        "content"  : "Alterar o período de cadastro da proposta:Altera o período de cadastro de proposta para o fim das 4 datas em 31/12/2018.                  ALTER TRIGGER dbcorpfns.tra_tbportaria DISABLE;      UPDATE dbcorpfns.tb_portaria          SET DT_FIM_VIGENCIA = TO_DATE(&#39;31/12/2018&#39;,&#39;DD/MM/YYYY&#39;),          DT_INICIO_VIGENCIA = TO_DATE(&#39;31/12/2016&#39;,&#39;DD/MM/YYYY&#39;),          DT_FIM_DILIGENCIA = TO_DATE(&#39;31/12/2018&#39;,&#39;DD/MM/YYYY&#39;),          DT_FIM_ANALISE = TO_DATE(&#39;31/12/2018&#39;,&#39;DD/MM/YYYY&#39;)      WHERE          co_seq_portaria in (45, 46);      ALTER TRIGGER dbcorpfns.tra_tbportaria ENABLE;      COMMIT;              Copiar ScriptAlterar o proponente da proposta:Altera o proponente de uma proposta para a mesma poder ser utilizada por um técnico em ‘Florianópolis’.                    UPDATE DBSISMOB.TB_PROPOSTA      SET CO_ATOR_PESSOA_ENTIDADE = 5624687, CO_ENDERECO = 181      WHERE NU_PROPOSTA = :NU_PROPOSTA;      commit;              Copiar ScriptAlterar as senhas para 123qwe:Altera a senha de todos os usuário para 123qwe.                    UPDATE dbsismob.tb_autenticacao      SET ds_senha  = &#39;$2a$11$bQtFzFwniBDi/0z7r3.r2ubM13P9ni88mhlz3KIB0nShIh6XKsWAK&#39;;      COMMIT;              Copiar ScriptBuscar algum CNES para inserir na etapa de funcionamento:Busca todos os CNES de um município específico, não levando em consideração o ‘Tipo de Obra’.                    select CO_CNES, NO_BAIRRO from DBCNESRJ.TB_ESTABELECIMENTO where CO_MUNICIPIO_GESTOR = Código do Município;              Copiar ScriptBuscar CNPJ de uma FMS/FES específica:Busca o CNPJ de uma entidade através do nome do município/estado que a representa.                    SELECT NO_PADRONIZADO, NU_CNPJ      FROM DBSISMOB.TB_ATOR_PESSOA_ENTIDADE      WHERE NO_PADRONIZADO LIKE &#39;%NOME_CIDADE_EM_CAPS%&#39;;              Copiar ScriptBuscar o IBGE de um município específico:Busca o código IBGE do município.                    SELECT CO_MUNICIPIO_IBGE FROM DBSISMOB.TB_ATOR_PESSOA_ENTIDADE      WHERE NO_PADRONIZADO LIKE %NOME_CIDADE_EM_CAPS%&#39;;              Copiar ScriptBuscar todos os perfis que estão expirados:Busca todos os perfis que estão com o período de utilização expirados.                    SELECT dadoPessoal.NU_CPF, atorPapel.DT_FIM, entidade.NU_CNPJ      FROM DBSISMOB.TB_ATOR_PAPEL atorPapel      INNER JOIN DBSISMOB.TB_ATOR_PESSOA_ENTIDADE entidade      ON entidade.CO_ATOR = atorPapel.CO_ATOR_PESSOA_ENTIDADE      INNER JOIN DBSISMOB.TB_ATOR_PESSOA_FISICA pessoaFisica      ON pessoaFisica.CO_ATOR = atorPapel.CO_ATOR      INNER JOIN DBSISMOB.TB_ATOR_DADO_PESSOAL dadoPessoal      ON dadoPessoal.CO_SEQ_ATOR_DADO_PESSOAL = pessoaFisica.CO_ATOR_DADO_PESSOAL      WHERE atorPapel.DT_FIM &amp;lt; DATA_DE_HOJE (DD/MM/AAAA)’&#39;;              Copiar ScriptCriar programas e emendas para um município específico:Cria 5 programas e 5 programas com 5 emendas cada no FMS de Florianópolis.                    ALTER TRIGGER DBCORPFNS.TRA_RLPRGESTOBJETOESFERA DISABLE;      INSERT INTO DBCORPFNS.RL_PROGRAMA_ACAO (CO_PROGRAMA, CO_ACAO, NU_ANO_EXERCICIO) VALUES (&#39;UFSC&#39;, &#39;UFSC&#39;, &#39;2017&#39;);      DECLARE      CNPJ_FUNCDO_FLORIPA VARCHAR2(14) := &#39;08935681000191&#39;;      CO_MUNICIPIO_IBGE_FLORIPA VARCHAR2(6) := &#39;420540&#39;;      CO_SEQ_ACAO_ID VARCHAR(4) := &#39;UFSC&#39;;      ANO VARCHAR(4) := &#39;2017&#39;;      QUANTIDADE_OBJETOS_PROGRAMA NUMBER(2):= 5;      QUANTIDADE_OBJETOS_EMENDA NUMBER(2):= 5;      QUANTIDADE_EMENDAS NUMBER(2):= 5;      VALOR NUMBER(10) := 1234567890;      VALOR_EMENDA NUMBER(10) := VALOR / QUANTIDADE_EMENDAS;      ID_PARLAMENTAR VARCHAR(4):= &#39;5265&#39;;      BEGIN      FOR TIPO_PROPOSTA IN (SELECT * FROM DBPROPOSTAFNS.TB_TIPO_PROPOSTA) LOOP      FOR I IN 1..QUANTIDADE_OBJETOS_PROGRAMA LOOP      INSERT INTO DBCORPFNS.VW_ESFERA_TIPO_ENT_ATIVO_PES (CO_SEQ_ESFERA_TIPO_ENT_PESSOA,NU_CPF_CNPJ_PESSOA,CO_TIPO_ENTIDADE)      (SELECT MAX(CO_SEQ_ESFERA_TIPO_ENT_PESSOA) + 1,CNPJ_FUNCDO_FLORIPA,&#39;13&#39; FROM DBCORPFNS.VW_ESFERA_TIPO_ENT_ATIVO_PES);      INSERT INTO DBPROPOSTAFNS.TB_OBJETO (CO_SEQ_OBJETO, DS_OBJETO, CO_GND, NU_ANO_EXERCICIO, ST_ATIVO)        (SELECT MAX(CO_SEQ_OBJETO) + 1, &#39;TESTE INTERNO - BRIDGE&#39; || (MAX(CO_SEQ_OBJETO) + 1), &#39;4&#39;, ANO, &#39;S&#39; FROM DBPROPOSTAFNS.TB_OBJETO);      DECLARE LAST_VALUE_OBJ NUMBER;      BEGIN      SELECT MAX(CO_SEQ_OBJETO) INTO LAST_VALUE_OBJ FROM DBPROPOSTAFNS.TB_OBJETO;      INSERT INTO DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO (CO_SEQ_TIPOPROPOSTA_OBJETO,CO_TIPO_PROPOSTA,CO_TIPO_RECURSO,CO_OBJETO,CO_ACAO)      (SELECT MAX(CO_SEQ_TIPOPROPOSTA_OBJETO) + 1, TIPO_PROPOSTA.CO_TIPO_PROPOSTA,&#39;2&#39;,LAST_VALUE_OBJ,CO_SEQ_ACAO_ID FROM DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO);      DECLARE LAST_VALUE_TIPO_PROPOSTA_OBJ NUMBER;      BEGIN      SELECT MAX(CO_SEQ_TIPOPROPOSTA_OBJETO) INTO LAST_VALUE_TIPO_PROPOSTA_OBJ FROM DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO;      INSERT INTO DBCORPFNS.RL_PRGEST_OBJETO_ESFERA (CO_SEQ_PRGEST_OBJETO_ESFERA,CO_PROGRAMA_ESTRATEGICO,CO_TIPOPROPOSTA_OBJETO,CO_ESFERA_ADMINISTRATIVA)        (SELECT MAX(CO_SEQ_PRGEST_OBJETO_ESFERA) + 1, &#39;245&#39;,LAST_VALUE_TIPO_PROPOSTA_OBJ,&#39;02&#39; FROM DBCORPFNS.RL_PRGEST_OBJETO_ESFERA);      DECLARE LAST_VALUE_OBJ_ESFERA NUMBER;      BEGIN      SELECT MAX(CO_SEQ_PRGEST_OBJETO_ESFERA) INTO LAST_VALUE_OBJ_ESFERA FROM DBCORPFNS.RL_PRGEST_OBJETO_ESFERA;      INSERT INTO DBPROPOSTAFNS.RL_PRGESTOBJESF_TIPOENTIDADE (CO_PRGEST_OBJETO_ESFERA,CO_TIPO_ENTIDADE)      VALUES (LAST_VALUE_OBJ_ESFERA,&#39;13&#39;);      INSERT INTO DBPROPOSTAFNS.TB_INDICACAO_OBJETO (CO_SEQ_INDIC_OBJETO, VL_OBJETO, DS_OBSERVACAO, NU_CPF_CNPJ_PESSOA, DS_USUARIO, DS_IP_USUARIO, CO_PRGEST_OBJETO_ESFERA)        (SELECT MAX(CO_SEQ_INDIC_OBJETO) + 1, VALOR, &#39;INDICAÇÃO OBJETO - TESTE INTERNO BRIDGE&#39;, CNPJ_FUNCDO_FLORIPA, &#39;TESTE BRIDGE&#39;, &#39;127.0.0.1&#39;, LAST_VALUE_OBJ_ESFERA FROM DBPROPOSTAFNS.TB_INDICACAO_OBJETO);      DECLARE LAST_VALUE_INDIC_OBJ NUMBER;      BEGIN      SELECT MAX(CO_SEQ_INDIC_OBJETO) INTO LAST_VALUE_INDIC_OBJ FROM DBPROPOSTAFNS.TB_INDICACAO_OBJETO;      INSERT INTO DBPROPOSTACONVENIO.RL_INDOBJ_PROJETO (CO_SEQ_INDOBJ_EMENDA_PROJETO, CO_INDIC_OBJETO, CO_EMENDA, CO_PROCESSO, VL_INDICADO, DS_USUARIO, DS_IP_USUARIO, ST_LIMITE_SRI)        (SELECT MAX(CO_SEQ_INDOBJ_EMENDA_PROJETO) + 1, LAST_VALUE_INDIC_OBJ, NULL, NULL, VALOR, &#39;TESTE SISMOB - BRIDGE&#39;, &#39;127.0.0.1&#39;, &#39;N&#39; FROM DBPROPOSTACONVENIO.RL_INDOBJ_PROJETO);      END;      END;      END;      END;      END LOOP;      FOR J IN 1..QUANTIDADE_OBJETOS_EMENDA LOOP      INSERT INTO DBCORPFNS.VW_ESFERA_TIPO_ENT_ATIVO_PES (CO_SEQ_ESFERA_TIPO_ENT_PESSOA,NU_CPF_CNPJ_PESSOA,CO_TIPO_ENTIDADE)      (SELECT MAX(CO_SEQ_ESFERA_TIPO_ENT_PESSOA) + 1,CNPJ_FUNCDO_FLORIPA,&#39;13&#39; FROM DBCORPFNS.VW_ESFERA_TIPO_ENT_ATIVO_PES);      INSERT INTO DBPROPOSTAFNS.TB_OBJETO (CO_SEQ_OBJETO, DS_OBJETO, CO_GND, NU_ANO_EXERCICIO, ST_ATIVO)        (SELECT MAX(CO_SEQ_OBJETO) + 1, &#39;TESTE INTERNO - BRIDGE - CO_SEQ_OBJETO = &#39; || (MAX(CO_SEQ_OBJETO) + 1), &#39;4&#39;, ANO, &#39;S&#39; FROM DBPROPOSTAFNS.TB_OBJETO);      DECLARE LAST_VALUE_OBJ2 NUMBER;      BEGIN      SELECT MAX(CO_SEQ_OBJETO) INTO LAST_VALUE_OBJ2 FROM DBPROPOSTAFNS.TB_OBJETO;      INSERT INTO DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO (CO_SEQ_TIPOPROPOSTA_OBJETO,CO_TIPO_PROPOSTA,CO_TIPO_RECURSO,CO_OBJETO,CO_ACAO)      (SELECT MAX(CO_SEQ_TIPOPROPOSTA_OBJETO) + 1,TIPO_PROPOSTA.CO_TIPO_PROPOSTA,&#39;2&#39;,LAST_VALUE_OBJ2,&#39;UFSC&#39; FROM DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO);      DECLARE LAST_VALUE_TIPO_PROPOSTA_OBJ2 NUMBER;      BEGIN      SELECT MAX(CO_SEQ_TIPOPROPOSTA_OBJETO) INTO LAST_VALUE_TIPO_PROPOSTA_OBJ2 FROM DBPROPOSTAFNS.RL_TIPOPROPOSTA_OBJETO;      INSERT INTO DBCORPFNS.RL_PRGEST_OBJETO_ESFERA (CO_SEQ_PRGEST_OBJETO_ESFERA,CO_PROGRAMA_ESTRATEGICO,CO_TIPOPROPOSTA_OBJETO,CO_ESFERA_ADMINISTRATIVA)        (SELECT MAX(CO_SEQ_PRGEST_OBJETO_ESFERA) + 1, &#39;245&#39;,LAST_VALUE_TIPO_PROPOSTA_OBJ2,&#39;02&#39; FROM DBCORPFNS.RL_PRGEST_OBJETO_ESFERA);      DECLARE LAST_VALUE_OBJ_ESFERA2 NUMBER;      BEGIN      SELECT MAX(CO_SEQ_PRGEST_OBJETO_ESFERA) INTO LAST_VALUE_OBJ_ESFERA2 FROM DBCORPFNS.RL_PRGEST_OBJETO_ESFERA;      INSERT INTO DBPROPOSTAFNS.RL_PRGESTOBJESF_TIPOENTIDADE (CO_PRGEST_OBJETO_ESFERA,CO_TIPO_ENTIDADE)      VALUES (LAST_VALUE_OBJ_ESFERA2,&#39;13&#39;);      INSERT INTO DBPROPOSTAFNS.TB_INDICACAO_OBJETO (CO_SEQ_INDIC_OBJETO, VL_OBJETO, DS_OBSERVACAO, NU_CPF_CNPJ_PESSOA, DS_USUARIO, DS_IP_USUARIO, CO_PRGEST_OBJETO_ESFERA)        (SELECT MAX(CO_SEQ_INDIC_OBJETO) + 1, VALOR, &#39;INDICAÇÃO OBJETO - TESTE INTERNO BRIDGE&#39;, CNPJ_FUNCDO_FLORIPA, &#39;TESTE BRIDGE&#39;, &#39;127.0.0.1&#39;, LAST_VALUE_OBJ_ESFERA2 FROM DBPROPOSTAFNS.TB_INDICACAO_OBJETO);      DECLARE LAST_VALUE_INDIC_OBJ2 NUMBER;      BEGIN      SELECT MAX(CO_SEQ_INDIC_OBJETO) INTO LAST_VALUE_INDIC_OBJ2 FROM DBPROPOSTAFNS.TB_INDICACAO_OBJETO;      INSERT INTO DBCORPFNS.TB_FUNCIONAL (CO_PTRES,NU_ANO_EXERCICIO,CO_ACAO,CO_PROGRAMA,CO_FUNCIONAL)      (SELECT MAX(CO_PTRES) + 1,ANO,CO_SEQ_ACAO_ID,&#39;0000&#39;,&#39;10301121485812104&#39; FROM DBCORPFNS.TB_FUNCIONAL);      DECLARE LAST_VALUE_FUNCIONAL NUMBER;      BEGIN      SELECT MAX(CO_PTRES) INTO LAST_VALUE_FUNCIONAL FROM DBCORPFNS.TB_FUNCIONAL;      FOR K IN 1..QUANTIDADE_EMENDAS LOOP      INSERT INTO DBPROPOSTAFNS.TB_EMENDA (CO_SEQ_EMENDA, NU_EMENDA, NU_FONTE, NU_ANO_EXERCICIO, DS_TITULO, CO_PTRES, CO_GND, CO_MODALIDADE, CO_PARLAMENTAR, CO_MUNICIPIO_IBGE, VL_EMENDA, ST_BLOQUEADA, VL_SALDO_EMENDA, CO_OBJETO)        (SELECT MAX(CO_SEQ_EMENDA) + 1, &#39;012345&#39; || K, &#39;0123&#39;, ANO, &#39;EMENDA DE TESTE - BRIDGE&#39;, LAST_VALUE_FUNCIONAL, &#39;3&#39;, &#39;40&#39;, ID_PARLAMENTAR, CO_MUNICIPIO_IBGE_FLORIPA, VALOR, &#39;N&#39;, VALOR, LAST_VALUE_OBJ2 FROM DBPROPOSTAFNS.TB_EMENDA);      DECLARE LAST_VALUE_EMENDA2 NUMBER;      BEGIN      SELECT MAX(CO_SEQ_EMENDA) INTO LAST_VALUE_EMENDA2 FROM DBPROPOSTAFNS.TB_EMENDA;      INSERT INTO DBPROPOSTACONVENIO.RL_INDOBJ_PROJETO (CO_SEQ_INDOBJ_EMENDA_PROJETO, CO_INDIC_OBJETO, CO_EMENDA, VL_INDICADO, DS_USUARIO, DS_IP_USUARIO, ST_LIMITE_SRI)        (SELECT MAX(CO_SEQ_INDOBJ_EMENDA_PROJETO) + 1, LAST_VALUE_INDIC_OBJ2, LAST_VALUE_EMENDA2, VALOR_EMENDA, &#39;TESTE SISMOB - BRIDGE&#39;, &#39;127.0.0.1&#39;, &#39;N&#39; FROM DBPROPOSTACONVENIO.RL_INDOBJ_PROJETO);      END;      END LOOP;      END;      END;      END;      END;      END;      END LOOP;      END LOOP;      END;              Copiar ScriptCriar solicitação de etapa:Cria uma solicitação de etapa anterior a etapa de uma proposta específica.                    :XXXX;      define var_co_proposta = &amp;XXXX;      UPDATE DBSISMOB.TB_TRAMITE      SET ST_ABERTO   = &#39;N&#39;, st_ultimo=&#39;N&#39;      WHERE CO_PROPOSTA =        &amp;amp;var_co_proposta      AND CO_TIPO_TRAMITE in (2,10);      UPDATE DBSISMOB.TB_SOLICITACAO_PARCELA      SET ST_ULTIMO   =&#39;N&#39;      WHERE CO_PROPOSTA =        &amp;var_co_proposta;      INSERT      INTO DBSISMOB.TB_SOLICITACAO_PARCELA        (CO_SEQ_SOLICITACAO_PARCELA, CO_PARCELA,ST_REGISTRO_ATIVO, CO_ETAPA_PROPOSTA,ST_ULTIMO, CO_PROPOSTA,CO_SITUACAO_SOLICITACAO)        VALUES        (          DBSISMOB.SQ_SOLPARCELA_COSEQSOLPARCELA.NEXTVAL,          1,          &#39;S&#39;,          1,          &#39;S&#39;,          &amp;amp;var_co_proposta,          1        );      INSERT      INTO DBSISMOB.TB_TRAMITE        (          CO_SEQ_TRAMITE,          CO_ATOR_PAPEL,          DT_TRAMITE,          ST_REGISTRO_ATIVO,          CO_TIPO_TRAMITE,          ST_ABERTO,          CO_SOLICITACAO_PARCELA,          TP_SERIALIZADOR,          NU_UNICO,          ST_ULTIMO,          DS_TRAMITE,          CO_PROPOSTA        )        VALUES        (          DBSISMOB.SQ_TRAMITE_COSEQTRAMITE.NEXTVAL,          2,          CURRENT_TIMESTAMP,          &#39;S&#39;,          10,          &#39;S&#39;,          DBSISMOB.SQ_SOLPARCELA_COSEQSOLPARCELA.CURRVAL,          0,          SYS_GUID(),          &#39;S&#39;,          &#39;Obra concluída e solicitada superação da etapa de ação preparatória da obra, dados importados do SISMOB 1.0, desativado em 07/03/2017&#39;,          &amp;amp;var_co_proposta        );              &amp;lt;/div&amp;gt;Copiar Script## Inserir as diligências e alteração de endereço:Inclui as diligências para uma &#39;Solicitação de alteração de endereço&#39;.                    INSERT INTO tb_diligencia (co_seq_diligencia, co_tipo_diligencia, co_parcela, tp_solicitacao_tramite, co_parametrizacao, st_registro_ativo, co_tipo_tramite, co_etapa_proposta) WITH diligencia AS (          SELECT MAX(co_seq_diligencia) + 1 AS co FROM tb_diligencia) SELECT diligencia.co, 20200025, NULL, 1, 1,&#39;S&#39;, NULL, 1 FROM diligencia;      INSERT INTO tb_diligencia (co_seq_diligencia, co_tipo_diligencia, co_parcela, tp_solicitacao_tramite, co_parametrizacao, st_registro_ativo, co_tipo_tramite, co_etapa_proposta) WITH diligencia AS (          SELECT MAX(co_seq_diligencia) + 1 AS co FROM tb_diligencia) SELECT diligencia.co, 849999, NULL, 1, 1,&#39;S&#39;, NULL, 1 FROM diligencia;      INSERT INTO tb_diligencia (co_seq_diligencia, co_tipo_diligencia, co_parcela, tp_solicitacao_tramite, co_parametrizacao, st_registro_ativo, co_tipo_tramite, co_etapa_proposta) WITH diligencia AS (          SELECT MAX(co_seq_diligencia) + 1 AS co FROM tb_diligencia) SELECT diligencia.co, 369999, NULL, 1, 1, &#39;S&#39;, NULL, 1 FROM diligencia;      COMMIT;              Copiar Script## Migração para ser executado no novo dump:Migração que precisa ser executada no novo dump. Necessário executar antes de subir o servidor.                    ALTER TABLE DBSISMOB.TB_PARECER_BLOQUEIO RENAME TO TB_BLOQUEIO;      ALTER TABLE DBSISMOB.TB_BLOQUEIO DROP CONSTRAINT PK_PARECERBLOQUEIO;      ALTER TABLE DBSISMOB.TB_BLOQUEIO DROP COLUMN CO_TRAMITE CASCADE CONSTRAINTS;      ALTER TABLE DBSISMOB.TB_BLOQUEIO ADD (NU_REGISTRO NUMBER(12) NOT NULL);      COMMENT ON COLUMN DBSISMOB.TB_BLOQUEIO.NU_REGISTRO IS &#39;Número do registro a ser bloqueado.&#39;;      ALTER TABLE DBSISMOB.TB_BLOQUEIO MODIFY (CO_OPERACAO NOT NULL);      ALTER TABLE DBSISMOB.TB_BLOQUEIO ADD CONSTRAINT PK_BLOQUEIO PRIMARY KEY (NU_REGISTRO,CO_OPERACAO) ENABLE;      DELETE FROM DBSISMOB.TB_TIPO_OPERACAO;      INSERT INTO DBSISMOB.TB_TIPO_OPERACAO (CO_SEQ_TIPO_OPERACAO, DS_TIPO_OPERACAO) VALUES (&#39;1&#39;, &#39;Proposta&#39;);      INSERT INTO DBSISMOB.TB_TIPO_OPERACAO (CO_SEQ_TIPO_OPERACAO, DS_TIPO_OPERACAO) VALUES (&#39;2&#39;, &#39;Usuário&#39;);      INSERT INTO DBSISMOB.TB_TIPO_OPERACAO (CO_SEQ_TIPO_OPERACAO, DS_TIPO_OPERACAO) VALUES (&#39;3&#39;, &#39;Solicitação de acesso&#39;);              Copiar Script## Popular base de solicitações:Apaga todas as solicitações atuais (etapa, prorrogação de prazo, etc) e cria 3 solicitações em cada situação possível para cada tipo de situação (útil para testar os filtros das listagens).                    ----------------------------------- DESATIVANDO TODAS AS SOLICITAÇÕES  -----------------------------------      UPDATE TB_SOLICITACAO_PARCELA      SET ST_REGISTRO_ATIVO = &#39;N&#39;, ST_ULTIMO = &#39;N&#39;;      DELETE FROM DBSISMOB.TB_SOLICITACAO_PRORROGACAO      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO &amp;gt; 681;      UPDATE TB_CANCELAMENTO_OBRA_PROPONEN      SET ST_REGISTRO_ATIVO = &#39;N&#39;;      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET ST_REGISTRO_ATIVO = &#39;N&#39;;      ----------------------------------- SOLICITACAO DE ALTERAÇÃO DE ENDEREÇO  -----------------------------------      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 1      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (1, 21, 41, 61, 81);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 2      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (101, 121, 141, 161, 181);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 3      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (201, 221, 241, 261, 281);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 4      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (301, 321, 341, 361, 381);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 5      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (401, 421, 441, 461, 481);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 6      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (501, 521, 541, 561, 581);      UPDATE dbsismob.tb_solicitacao_alteracao_endrc      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 7      WHERE CO_SEQ_SOLICITACAO_ALTRC_ENDRC IN (601, 621, 641, 661, 681);      ----------------------------------- SOLICITACAO DE PRORROGAÇÃO DE PRAZO -----------------------------------      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 1      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (1, 21, 41, 61, 81);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 2      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (101, 121, 141, 161, 181);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 3      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (201, 221, 241, 261, 281);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 4      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (301, 321, 341, 361, 381);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 5      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (401, 421, 441, 461, 481);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 6      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (501, 521, 541, 561, 581);      UPDATE dbsismob.TB_SOLICITACAO_PRORROGACAO      SET co_situacao_solicitacao = 7      WHERE CO_SEQ_SOLICITACAO_PRORROGACAO IN (601, 621, 641, 661, 681);      ----------------------------------- SOLICITACAO DE CANCELAMENTO DA OBRA -----------------------------------      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 1      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (1, 21, 41, 61, 81);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 2      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (101, 121, 141, 161, 181);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 3      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (201, 221, 241, 261, 281);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 4      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (301, 321, 341, 361, 381);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 5      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (401, 421, 441, 461, 481);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 6      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (501, 521, 541, 561, 581);      UPDATE dbsismob.TB_CANCELAMENTO_OBRA_PROPONEN      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 7      WHERE CO_SEQ_TB_CANCELA_OBRA_PROPONE IN (601, 621, 641, 661, 701);      -----------------------------  SOLICITACAO DE SUPERAÇÃO DE ETAPA AÇÃO PREPARATÓRIA  -----------------------------      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 1, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1, 21, 41, 61, 81);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 2, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (101, 121, 141, 161, 181);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 4, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (301, 321, 341, 361, 381);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 5, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (401, 421, 441, 461, 481);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 6, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (501, 521, 541, 561, 581);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 7, co_etapa_proposta = 1, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (601, 621, 641, 661, 681);      -----------------------------  SOLICITACAO DE SUPERAÇÃO DE ETAPA DE INÍCIO DE EXECUÇÃO -----------------------------      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 1, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (701, 721, 741, 761, 781);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 2, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (801, 821, 841, 861, 881);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 4, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (901, 921, 941, 961, 981);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 5, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1001, 1021, 1041, 1061, 1081);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 6, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1101, 1121, 1141, 1161, 1181);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 7, co_etapa_proposta = 2, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1201, 1221, 1241, 1261, 1281);      ----------------------------  SOLICITACAO DE SUPERAÇÃO DE ETAPA DE EXECUÇÃO E CONCLUSÃO ----------------------------      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 1, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1301, 1321, 1341, 1361, 1381);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 2, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1401, 1421, 1441, 1461, 1481);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 4, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1501, 1521, 1541, 1561, 1581);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 5, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1601, 1621, 1641, 1661, 1681);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 6, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1701, 1721, 1741, 1761, 1781);      UPDATE dbsismob.TB_SOLICITACAO_PARCELA      SET st_registro_ativo = &#39;S&#39;, co_situacao_solicitacao = 7, co_etapa_proposta = 3, st_ultimo = &#39;S&#39;      WHERE CO_SEQ_SOLICITACAO_PARCELA IN (1801, 1821, 1841, 1861, 1881);      COMMIT;              Copiar Script## Priorizar todas as propostas:Prioriza todas as propostas cadastradas até então para poder ser emitido o parecer de habilitação.                    update DBPROPOSTACONVENIO.TB_PROJETO      set ST_PRIORIDADE = &#39;S&#39;;                Copiar Script## Reverter parecer de superação de etapa:Altera a situação da proposta para o estado anterior ao de um parecer.                        :XXXX;      DEFINE var_co_proposta = &amp;XXXX;      UPDATE DBSISMOB.TB_SOLICITACAO_PARCELA      SET CO_SITUACAO_SOLICITACAO = 1      WHERE CO_PROPOSTA = &amp;amp;&amp;var_co_proposta;      UPDATE DBSISMOB.TB_TRAMITE      SET ST_REGISTRO_ATIVO = &#39;N&#39;      WHERE CO_TIPO_TRAMITE = 2 AND ST_ULTIMO = &#39;S&#39; AND CO_PROPOSTA = &amp;amp;&amp;var_co_proposta;      UPDATE DBSISMOB.TB_TRAMITE      SET ST_ABERTO = &#39;S&#39;, CO_PARECER = NULL      WHERE ST_ULTIMO = &#39;S&#39; AND CO_TIPO_TRAMITE = 10 AND CO_PROPOSTA = &amp;amp;&amp;var_co_proposta;      UPDATE DBSISMOB.TB_PARECER      SET ST_REGISTRO_ATIVO =&#39;N&#39;      WHERE co_seq_parecer IN (      SELECT co_parecer      FROM DBSISMOB.TB_TRAMITE      WHERE CO_TIPO_TRAMITE = 2 AND ST_ULTIMO = &#39;S&#39; AND CO_PROPOSTA = &amp;amp;&amp;amp;var_co_proposta);      UPDATE TB_OBRA      SET CO_SITUACAO_OBRA = 0      WHERE CO_PROPOSTA = &amp;amp;&amp;var_co_proposta;      COMMIT;                Copiar Script"
     
   } ,
  
   {
     
        "title"    : "Dumps e Configurações",
        "url"      : "/sismob/banco-de-dados/dumps-e-config/index.html",
        "content"  : "Passos para utilizar o banco de dados com docker1. Fazer pull do repositório do sismob.2. Baixar os arquivos da pasta dump do drive para dentro da pasta docker/dumps3. Setar a variável de ambiente $DUMPS_HOME com o caminho para a pasta sismob/docker/dumps do repositório do github (não colocar barra no final)Para exportar uma variável no linux basta digitar no terminal: $ export DUMPS_HOME=[CAMINHO PARA DUMPS]4. Rodar o scrip docker.shDocker.sh################################################################################### SISMOB DOCKER ########################################################################################Selecione uma opção1 - Start2 - Restart3 - Update4 - Reset5 - Exit############################################################################################################################Start. Inicia o banco de dados utilizando uma pasta local como repositório dos arquivos .dat. Por padrão essa pasta será ~/docker-oracle-home/, mas ela pode ser alterada exportando a variável de ambiente $DOCKER_ORACLE_HOME. Ao iniciar o banco pela primeira vez, os arquivos dmp.zip serão descompactados utilizando unzip e serão importados um a um. Esse processo pode ser um pouco demorado, mas acontecerá somente quando um banco é iniciado pela primeira vez.Restart. Reinicia o container do banco. Mantém todas as modificações feitas na base de dados.Update. Força a descompressão dos arquivos dmp.zip da pasta docker/dumps e reseta o banco.Reset. Apaga o banco criado e refaz o processo de importação. FIXME: Existe um erro ao tentar remover a pasta $DOCKER_ORACLE_HOME pelo script. Por enquanto, remova essa pasta manualmente. $ sudo rm -r [DOCKER_ORACLE_HOME]Exit. Finaliza a execução do docker.sh.Utilizar várias versões do bancoSe quiser utilizar diferentes versões do banco de dados é necessário alterar a variável de ambiente $DOCKER_ORACLE_HOME, setando para uma nova pasta, e executar a opção Restart.Atualizar dump1. Substituir o arquivo .dmp.zip antigo pelo novo dump do respectivo schema. (Manter o mesmo nome do arquivo antigo)2. Executar Update.Links úteis  Docker image  Oracle Data pump"
     
   } ,
  
   {
     
        "title"    : "Banco de Dados",
        "url"      : "/sismob/banco-de-dados/index.html",
        "content"  : ""
     
   } ,
  
   {
     
        "title"    : "Padrão de Nomenclatura",
        "url"      : "/sismob/banco-de-dados/nomenclatura/index.html",
        "content"  : "Padrão de nomenclatura a ser utilizada no SISMOBO banco de dados deve seguir os padrões definidos pelo DATASUS.Segue link com o PDF com o detalhe dos padrões:https://drive.google.com/open?id=0B-h414mXnBScQ29jUHk4bWxKaGsObservações específicas do SISMOB  Não utilizar o sufixo ou prefixo “DbSismob” no nome das classes JPA. Caso exista uma classe com o mesmo nome e em outro pacote esta deve ser excluída, caso não seja utilizada, ou deve receber o prefixo com o nome do SCHEMA que ela pertence;  Nome das tabela - quando possuir vários nomes o primeiro deve ser o mais significativo ou o principal. Ex.: TB_PROPOSTA_ANEXO ou TB_MONITORAMENTO_PROJETO_LICITACAO  Se um enum não possuir uma tabela de relacionamento deve ser usado o prefixo “TP_” nas tabelas que recebem o @EnumeratedOrientações para manipulação do banco  Para criação de chaves, estamos utilizando três tamanhos definidos em changelog-master.xml: small (4), medium (9) e big (12). Use conforme a necessidade da tabela, se esta tende a ter muitos registros, utilize 12, caso contrário, uma tabela com poucos tipos por exemplo, utilize 4.  A chave estrangeira precisa ter o mesmo tamanho e tipo da chave primária da tabela a qual ela está referenciando.  Para toda chave estrangeira, é necessário a criação de um Index na coluna que possui a FK.  Muito cuidado na hora de definir as constraints, existe um padrão para criação do nome de cada uma, e caso seja criada de maneira errada sua manutenção é custosa. Este padrão está definido no documento acima. Abaixo alguns exemplos, utilizando TB_TABELA_ORIGEM e TB_TABELA_DESTINO:  PK_TABELAORIGEM (sem TB nem underline)  FK_TABELADESTINO_TABELAORIGEM  IN_TABELAORIGEM_COTABELADESTINO  CK_TABELAORIGEM_STREGISTROATIVO  Caso o nome da constraint ultrapasse 30 caracteres, utilizar abreviação conforme definido no documento acima.  TODAS as colunas e tabelas do sistema precisam de comentário.  É necessário que esteja escrito no comentário da coluna que possui chave primária gerada por sequence (CO_SEQ), o nome da sequence que está sendo utilizada.  É necessário que esteja escrito no comentário da coluna que possui chave estrangeira qual tabela e qual chave está sendo referenciada.  As tabelas de relacionamento (RL) também possuem um padrão para criação do nome, sendo basicamente RL_TABELA1_TABELA2. Mais informações no documento acima.  Toda coluna do tipo ST ou TP precisa ter um valor DEFAULT, ser NOT NULL, ter uma constraint Check que verifica seus possíveis valores e ter explícito no comentário da coluna quais são os possíveis valores.  Pela necessidade de ser NOT NULL, o uso de TP é desencorajado, a menos que haja a garantia de que sempre haverá um valor pra essa coluna. Caso contrário, cria-se uma tabela de tipos e usa-se chave estrangeira normalmente.  O uso de chave primária composta em tabelas que não são RL é desencorajado, pois possui difícil manutenibilidade.  Qualquer dúvida, não havendo o entendimento do documento ou algum problema desconhecido, não hesite em perguntar ao colega."
     
   } ,
  
   {
     
        "title"    : "Configurações do Ambiente",
        "url"      : "/sismob/configuracao-ambiente/index.html",
        "content"  : "LinuxJava 8InstalaçãoPasso 1sudo add-apt-repository ppa:webupd8team/javaPasso 2sudo apt-get updatePasso 3sudo apt-get install oracle-java8-installerPasso 4sudo apt-get install oracle-java8-set-defaultGitPasso 1 - Instalaçãosudo apt-get install gitPasso 2  Logar no github e fazer um fork do repositório sismobPasso 3 - Clonar o projeto sismob:git clone https://github.com/[usuario]/[nome_repositorio]Passo 4 - Criar arquivo para o banco  Após clonar o repositório, crie um arquivo chamado database.properties dentro da pasta {DIRETORIO_DO_PROJETO}/sismob.business.impl/src/main/resources/config/          O arquivo criado deverá conter as informações da base de dados usada pela aplicação        Para não gerar .orig:          git config –global mergetool.keepBackup false      Exemplo para um banco local:oracle.jdbc.driverClassName=oracle.jdbc.OracleDriver  oracle.jdbc.url=jdbc:oracle:thin:@localhost:1521:xe  oracle.jdbc.username=BRIDGE  oracle.jdbc.password=j5m9jTr5s4mvgvb82MSM  Passo 1 - Instalaçãosudo apt-get install maven  Executar o comando    mvn clean install        (A build irá falhar)  Passo 2 - baixar a configuração  Baixar  settings.xml na pasta “Programação” no Drive do SISMOB e mover para a pasta .m2 que está na homePasso 3 - mover a configuraçãosudo mv settings.xml ~/.m2//.m2 é (pasta oculta)Dockerwget -qO- https://get.docker.com/ | shsudo usermod -aG docker &#39;Nome do seu usuário do PC&#39;  Reiniciar a máquina OU Fazer logoff e login  Logar no DockerHub utilizando sua conta do github(criar conta no docker com mesmo nome de usuário)  Pedir acesso as images do banco do SISMOB  Logar com sua conta no docker e executar no terminal: docker login  Fazer pull da imagem do banco no docker: Configurando DumpsIDE para Banco de Dados      SQLDeveloper        DataGrip            SQLDeveloper              Passo 1 - Baixar Arquivo      Download      Passo 2 - Descompactar para a pasta /opt        sudo unzip sqldeveloper-x.zip /opt/      Passo 3 - abrir sqlDeveloper      sudo sh /opt/sqldeveloper.sh      (caso peça o path do java /usr/lib/jvm/java-8-oracle )      Passo 4 - Adicionar conexão e configurar com as seguinte diretrizes              * Connections -&amp;gt; New Connections -&amp;gt; Connection Type: Advanced         * URL: jdbc:oracle:thin:@localhost:1521:XE         * Username: DBSISMOB         * Password: j5m9jTr5s4mvgvb82MSM         * Connect                  DataGrip                 Baixar Arquivo        Download      Instalar        sh seudir/bin/datagrip.sh      Ativar      Para ativação clicar em *License server* e colocar o link http://idea.imsxm.com      Adicionar o banco e configurar                    Clicar na aba View -&amp;gt; Tool Windows -&amp;gt; Database           Copiar o import desejado abaixo, clicando no botão                                                                       #DataSourceSettings#                  #LocalDataSource: HOMOLOGACAO_SISMOB                  #BEGIN#                  $#&amp;quot;oracletruefalseoracle.jdbc.OracleDriverjdbc:oracle:thin:@jenkins-mobile.sismob.ufsc.br:1521:xemaster_keyBRIDGE*:BRIDGE,DBCGPAN,DBCNES,DBCORPFNS,DBFAF,DBGERAL,DBPROPOSTACONVENIO,DBPROPOSTAFNS,DBPROPOSTASAS,DBSISMOB                  #END#                                  Import do homologação                                                                            #DataSourceSettings#                  #LocalDataSource: LOCAL                  #BEGIN#                  $#&amp;quot;oracletruefalseoracle.jdbc.OracleDriverjdbc:oracle:thin:@localhost:1521:XEmaster_keyBRIDGE*:BRIDGE,DBCGPAN,DBCNES,DBCNESRJ,DBCORPFNS,DBFAF,DBGERAL,DBNACIONAL,DBPESSOA,DBPGESCONTA,DBPROPOSTACONVENIO,DBPROPOSTAFNS,DBPROPOSTASAS,DBSISMOBOracleSqlPlus                  #END#                                Import do Banco Local                                                                            #DataSourceSettings#                  #LocalDataSource: PROD                  #BEGIN#                  $#&amp;quot;oracletruefalseoracle.jdbc.OracleDriverjdbc:oracle:thin:@srvoradf0.saude.gov:1521/dfpo1.saude.govmaster_keySISMOBWEB*:DBCORPFNS,DBPROPOSTACONVENIO,DBPROPOSTAFNS,DBPROPOSTASAS,DBSISMOB,SISMOBWEB                  #END#                                Import do Produção                                                No DataGrip, na view que foi aberta, clicar no sinal &#39;+&#39; -&amp;gt; Import from clipboard           Configurar o usuário e senha (todo o resto deve já vir setado corretamente por padrão)                    (Opcional)          Ir na aba Schemas e selecionar somente aqueles schemas úteis, para evitar poluição visual                    Clicar em Ok            Eclipse        IntelliJ        Java EE Eclipse              Baixar        Download        Escolher: Eclipse IDE for Java EE Developers      Descompactar e abrir o eclipse      Importar projetos:       File -&amp;gt; Import -&amp;gt; Existing Maven Projects      Importar todos os projetos do sismob com exceção do core.processor      Save actions:       window -&amp;gt; preferences -&amp;gt; java -&amp;gt; editor -&amp;gt; save actions -&amp;gt; configure      Print das telas em: Link      Marcar:                      Perform the selected actions on save            Format sorce code            Format all lines            Organize imports            Additional actions:                                  organizing(remove trailin whitespace - all lines;)                      code style (use blocks - always; and use parentheses - only if necessary)                      member accesses (use this qualifier for field accesses - always; and for methods accesses )                     missing code (add missing annotations)                      unnecessary code (remove unused imports; remove unnecessary casts)                                                        Importar arquivo sismob-formatter que está na pasta do sismob, em window -&amp;gt; preferences -&amp;gt; java -&amp;gt; code style formatter      Importar arquivo cleanUp que está na pasta sismob, em Window -&amp;gt; preferences - &amp;gt; java -&amp;gt; cleanUp      Importar arquivo `bridge.importorder` que está na pasta sismob, em Window -&amp;gt; preferences - &amp;gt; java -&amp;gt; code style &amp;gt; Organize Imports      Instalar Maven Integration JDT APT : Help -&amp;gt; Eclipse Marketplace:                  Pesquisar por Jboss            Instalar JBoss Tools            Marcar:                              JBoss Maven Integration                Maven Integration JDT APT                                              Selecionar o projeto sismob.common.api &amp;gt; Project &amp;gt; Properties &amp;gt; maven &amp;gt; annotation processing &amp;gt; Marcar Automatically configure JDT APT      Selecionar o projeto sismob.tools &amp;gt; Project &amp;gt; Properties &amp;gt; Java Build Path &amp;gt; Projects &amp;gt; Adicionar o projeto core.tools      Selecionar o projeto sismob.business.impl &amp;gt; Project &amp;gt; Properties &amp;gt; maven &amp;gt; annotation processing &amp;gt; Marcar Automatically configure JDT APT      Run &amp;gt; Debug Configurations &amp;gt; New Java Application &amp;gt; Project: sismob.springboot, Main class: br.gov.sismob.application.SismobApplication       Windows &amp;gt; Preferences &amp;gt; Maven &amp;gt; Annotation Processing &amp;gt; Marcar Automatically configure JDT APT      Fechar eclipse            Jet Brains InteliiJ        Em ConstruçãoLombok  Download  sudo java -jar lombok.jar  Selecionar pasta do eclipse e instalar.Jekyllsudo apt-add-repository ppa:brightbox/ruby-ngsudo apt-get updatesudo apt-get install ruby2.3 ruby2.3-dev build-essentialsudo gem2.3 install bundlersudo gem install posix-spawnsudo gem install jekyllPara servir a documentação em um servidor local: jekyll serve (a partir da raiz da documentação).Testes automatizadosBaixar o chromedriver  wget -N http://chromedriver.storage.googleapis.com/2.29/chromedriver_linux64.zip  unzip chromedriver_linux64.zip  chmod +x chromedriver  sudo mv -f chromedriver /usr/local/share/chromedriver  sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver  sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriverBaixar a licença do Testbench do vaadin (https://drive.google.com/open?id=0B7kfNsf4ayKQMGVtRVBrSkgyaGc) e mover para a homeSugestõesDocker without sudo:http://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudoGit credentials para linux:http://git-scm.com/docs/git-credential-storeQuick diff (mostra as diferenças do git em relação a última versão na barra lateral do eclipse):  No eclipse, Window -&amp;gt; Preferences - Pesquisar por Quick Diff  Trocar o “reference source” por “A Git Revision” e escolher as cores conforme preferência.Content assist (editor do eclipse mais “inteligente”):Window -&amp;gt; Preferences -&amp;gt; Java -&amp;gt; Editor -&amp;gt; Content AssistInsertion: Completion overwritesFill method arguments and show guessed arguments: Insert best guessed argumentsMeld (Comparador para conflitos no git):  sudo apt-get install meldEm caso de conflito ao fazer pull, utilizar o seguinte comando:          git mergetool -t meld  Existe uma forma de setar o meld como ferramenta padrão de merge. Caso necessário, perguntar ao oráculo.      Git Alias:Configurando alias no git, entrar no diretório onde encontra-se o projeto e seguir os exemplos abaixo:Adicionando alias de pull no projeto core do SISMOB, repositório master (foi utilizado o alias ‘pullcore’, podendo ser trocado por qualquer outra palavra):git config alias.pullcore &quot;pull https://github.com/sismob/core&quot;  Utilização: git pullcore  Adicionando alias de pull no projeto sismob do SISMOB, repositório master (foi utilizado o alias ‘pullsismob’, podendo ser trocado por qualquer outra palavra):git config alias.pullsismob &quot;pull https://github.com/sismob/sismob&quot;  Utilização: git pullsismob  Obs 1: Da forma acima, os alias funcionarão apenas nos diretórios e sub-diretórios onde foram executados os comandos (recomendável). Para configuração global, utilizar --global .  Aumentar a memória do eclipseAbrir o eclipse.ini: sudo cd  /opt/eclipse/eclipse.ini        1.1 trocar –launcher.XXMaxPermSize, de 256M para 4096M        1.2 trocar -Xms40m para Xms4096m e -Xmx512m para -Xmx4096mLogbackO arquivo logback-spring.xml controla o nível de log. É útil para debugar queries. Os valores dos binding parameters vão aparecer abaixo da query quando a propriedade level for definida como “TRACE” na linha seguinte:    &amp;lt;logger name=&quot;org.hibernate.type&quot; level=&quot;TRACE&quot; /&amp;gt;A quantidade de linhas de log aumenta bastante ao mudar o level para “TRACE”. Para voltar ao nível normal de log, basta definir o valor de level para “ERROR” outra vez. Faça Refresh nos projetos e Update Maven Projects sempre que fizer essa alteração.SonarLintO SonarLint é uma extensão do Eclipse que permite receber feedback on-the-fly sobre bugs e qualidade do código que está sendo desenvolvido.Para instalar siga os passos:  No eclipse, na parte superior clique em ‘Help’ &amp;gt; ‘Eclipse Marketplace’.  No campo ‘Find’ digite ‘SonarLint’.  Clique em ‘Install’ e siga os passos."
     
   } ,
  
   {
     
        "title"    : "WIKI",
        "url"      : "/",
        "content"  : "Página destinada a Ajudar as Equipes  nas rotinas diáriasSISMOB FOR DEVELOPMENT"
     
   } ,
  
   {
     
        "title"    : "Processos",
        "url"      : "/sismob/processos/index.html",
        "content"  : "Definição de processos"
     
   } 
  
]
